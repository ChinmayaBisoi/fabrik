/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    mesh_92_0: THREE.Mesh;
    mesh_92_2: THREE.Mesh;
    mesh_92_4: THREE.Mesh;
    mesh_92_5: THREE.Mesh;
    mesh_92_1: THREE.Mesh;
    mesh_92_3: THREE.Mesh;
  };
  materials: {
    ["Material.011"]: THREE.MeshStandardMaterial;
    ["Material.009"]: THREE.MeshStandardMaterial;
    ["Material.007"]: THREE.MeshStandardMaterial;
    ["Material.010"]: THREE.MeshStandardMaterial;
    ["Material.008"]: THREE.MeshStandardMaterial;
    ["Material.012"]: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/retail-3D-models/P1.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={[30, 30, 30]}>
        <mesh
          geometry={nodes.mesh_92_0.geometry}
          material={materials["Material.011"]}
        />
        <mesh
          geometry={nodes.mesh_92_2.geometry}
          material={materials["Material.009"]}
        />
        <mesh
          geometry={nodes.mesh_92_4.geometry}
          material={materials["Material.007"]}
        />
        <mesh
          geometry={nodes.mesh_92_5.geometry}
          material={materials["Material.010"]}
        />
        <mesh
          geometry={nodes.mesh_92_1.geometry}
          material={materials["Material.008"]}
        />
        <mesh
          geometry={nodes.mesh_92_3.geometry}
          material={materials["Material.012"]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/retail-3D-models/P1.glb");
